---
title: "Analysis"
format: html
editor: visual
---

```{r setup, echo=F, message=F}
library(tidyverse)
library(data.table)
library(qiime2R)
library(phyloseq)
library(microshades)
library(cowplot)
```

# Load data
```{r load_data}
pseq <- qza_to_phyloseq(features="EPSS_noMito_noChloro-filtered-table.qza",
                        tree="EPSS_insertion-tree-sepp.qza",
                        taxonomy="EPSS_silva-classified/classification.qza")

# Need to separately add the metadata to the phyloseq object for some reason
metadata <- read.csv("metadata.txt", sep="\t")
metadata[metadata$Group=="noPet", "Group"] <- "No Pet"
rownames(metadata) <- metadata$Sample.ID
sample_data(pseq) <- metadata
```

# Taxa bar plot at phylum level with genus microshades
```{r microshades, warning=F, fig.height=10, fig.width=12}
make_microshades_phylum <- function(pseq, subgroup, 
                                    sample_ids=FALSE, sort_phylum=NULL){
    # prep the microshades colors
    mdf_prep <- prep_mdf(pseq, subgroup_level=subgroup)
    # sort the phylum names
    phylum_table <- tax_glom(pseq, taxrank="Phylum", ) %>% otu_table()
    phyla_otunames <- rownames(phylum_table)
    
    taxonomy_table <- tax_table(pseq)
    phylums <- taxonomy_table[phyla_otunames,"Phylum"]
    
    sorted_phylums <- phylums[order(rowSums(phylum_table), decreasing=T)]
    
    # create the colors object
    color_objs_GP <- create_color_dfs(mdf_prep, selected_groups=sorted_phylums[5:1], 
                                      cvd = TRUE, subgroup_level=subgroup)
    
    if(!is.null(sort_phylum)){
      color_objs_GP <- reorder_samples_by(color_objs_GP$mdf,
                                        color_objs_GP$cdf,
                                        order_tax=sort_phylum)  
    }
    
    
    # Extract
    mdf_GP <- color_objs_GP$mdf
    cdf_GP <- color_objs_GP$cdf
    
    # create a custom legend
    GP_legend <-custom_legend(mdf_GP, cdf_GP, 
                              legend_key_size=unit(0.4, "cm"),
                              legend_text_size=10, subgroup_level=subgroup)
    
    # plot
    plot <- plot_microshades(mdf_GP, cdf_GP)

    
    if (sample_ids==TRUE){
        plot_1 <- plot + scale_y_continuous(labels = scales::percent, expand = expansion(0)) +
        theme(legend.position = "none")  +
        facet_grid(~PID, scales="free_x", space="free_x"
                 )    
    } else {
        plot_1 <- plot + scale_y_continuous(labels = scales::percent, expand = expansion(0)) +
        theme(legend.position = "none")  +
        theme(axis.text.x = element_blank(),
              axis.ticks.x = element_blank()) +
        facet_grid(~Group, scales="free_x", space="free_x"
                 )
    }
        
    multi <- plot_grid(plot_1, GP_legend,  rel_widths = c(1, .25))
    multi
}

p <- make_microshades_phylum(pseq, subgroup="Genus", sort_phylum="Firmicutes")
p

ggsave(plot=p, 
       filename="../figures/Taxa-bars-phylum-genus.pdf", 
       height=12, width=12)
```

# Colors
```{r}
pet_color <- rgb(182, 253, 170, maxColorValue=255)
nopet_color <- rgb(160, 159, 164, maxColorValue=255)
```

# Alpha diversity
```{r alpha_div, fig.height=6, fig.width=10}
faith <- read_qza("EPSS_core-diversity-results/faith_pd_vector.qza")$data
div_dat <- merge(metadata, faith, by.x="Sample.ID", by.y="row.names")
observed_features <- read_qza("EPSS_core-diversity-results/observed_features_vector.qza")$data
div_dat <- merge(div_dat, observed_features, by.x="Sample.ID", by.y="row.names")
shannon <- read_qza("EPSS_core-diversity-results/shannon_vector.qza")$data
div_dat <- merge(div_dat, shannon, by.x="Sample.ID", by.y="row.names")

div_dat_melted <- div_dat %>% 
  dplyr::select(c(faith_pd, observed_features, shannon_entropy, Group)) %>%
  reshape2::melt(id.vars=c("Group"))

div_dat_melted <- div_dat_melted %>%
  mutate(variable = recode(variable,
    "faith_pd" = "Faith's Phylogenetic Diversity",
    "observed_features" = "Observed Amplicon Sequence Variants",
    "shannon_entropy" = "Shannon Entropy"
  ))

div_dat_melted$Group <- factor(div_dat_melted$Group, levels=c("Pet", "No Pet"))
# This is used with geom_blank to makesure y axes start at 0
dummy_data <- data.frame(value=c(0,0,0),
                         Group=c("Pet", "Pet", "Pet"),
                         variable=c("Faith's Phylogenetic Diversity",
                                    "Observed Amplicon Sequence Variants",
                                    "Shannon Entropy"))
p <- ggplot(div_dat_melted, 
       mapping=aes(x=Group, y=value)) +
  geom_boxplot(outliers=FALSE) +
  geom_jitter(width=0.1, aes(fill=Group), shape=21, size=2) +
  geom_blank(aes(y=value), data=dummy_data) +
  facet_wrap(~variable, scales="free_y") +
  theme_bw() +
  labs(x="", y="Diversity Value") +
  scale_fill_manual(values=c("No Pet"=nopet_color,
                              "Pet"=pet_color)) +
  theme(legend.position="none")

p

ggsave(plot=p, filename="../figures/Alpha-diversity-boxplots.pdf", 
       height=6, width=10)
```

# PCoA
```{r pcoa, fig.height=4, fig.width=6}
wu <- read_qza("EPSS_core-diversity-results/weighted_unifrac_pcoa_results.qza")$data
wu_explained <- format(round(wu$ProportionExplained*100, digits=1))
wu_coords <- wu$Vectors
rownames(wu_coords) <- wu_coords$SampleID
wu_coords$SampleID <- NULL
# add variance explained to PCo axesnames
string_explained <- paste0(colnames(wu_coords), " (", wu_explained, "%)")

wu_pcoa_dat <- merge(wu_coords, metadata, by.x="row.names", by.y="Sample.ID")
wu_plot <- ggplot(wu_pcoa_dat, aes(x=`PC1`, y=`PC2`, fill=Group)) +
  geom_point(size=3, shape=21) +
  stat_ellipse(aes(fill=Group), alpha=0.2, geom="polygon", level=0.95) +  # 95% CI ellipses
  theme_bw() +
  labs(x=string_explained[1], y=string_explained[2]) +
  theme(legend.title = element_blank()) +
  scale_fill_manual(values=c("No Pet"=nopet_color,
                              "Pet"=pet_color))

wu_plot

ggsave(plot=wu_plot, filename="../figures/Weighted_UniFrac_PCoA.pdf",
       height=4, width=6)
```